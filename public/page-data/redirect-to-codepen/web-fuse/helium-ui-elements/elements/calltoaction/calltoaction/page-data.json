{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/calltoaction/calltoaction","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import buttonCss from '../common/styles/button.css';\\nimport callToActionCss from './calltoaction.css';\\n\\nimport { componentUtils } from '../common/component-utils.js';\\nimport { html } from '../../library/html-utils.js';\\n\\nconst styles = [buttonCss, callToActionCss];\\n\\n(function () {\\n    class MCCallToAction extends HTMLElement {\\n        connectedCallback () {\\n            if (!this.shadowRoot) {\\n                this._render();\\n            }\\n        }\\n\\n        _render () {\\n            const template = document.createElement('template');\\n            template.innerHTML =\\n                html`<div class=\\\"mc-calltoaction-main\\\">\\n                    <div class=\\\"mc-calltoaction-icon ${this.icon}\\\"></div>\\n                    <div><h3>${this.header}</h3></div>\\n                    <button class=\\\"mc-button mc-calltoaction-button\\\">${this.buttonText}</button>\\n                    <div>\\n                        <p id=\\\"mc-calltoaction-message\\\">${this.message}</p>\\n                        <p id=\\\"mc-calltoaction-help\\\">Check out our <a href=\\\"gettingstarted\\\">Getting Started</a> guide and <a href=\\\"faq\\\">FAQs</a> for help.</p>\\n                    </div>\\n                </div>`;\\n\\n            this.attachShadow({ mode: 'open' });\\n            componentUtils.addStylesToElement(this.shadowRoot, styles);\\n            this.shadowRoot.appendChild(template.content.cloneNode(true));\\n\\n            let button = this._getActionButton();\\n            button.addEventListener('click', e => {\\n                this.dispatchEvent(new CustomEvent('action-button-click'));\\n            });\\n        }\\n\\n        get header () {\\n            return this.getAttribute('header');\\n        }\\n\\n        set header (value) {\\n            this.setAttribute('header', value);\\n        }\\n\\n        get message () {\\n            return this.getAttribute('message');\\n        }\\n\\n        set message (value) {\\n            this.setAttribute('message', value);\\n        }\\n\\n        get icon () {\\n            return this.getAttribute('icon');\\n        }\\n\\n        set icon (value) {\\n            this.setAttribute('icon', value);\\n        }\\n\\n        get buttonText () {\\n            return this.getAttribute('button-text');\\n        }\\n\\n        set buttonText (value) {\\n            this.setAttribute('button-text', value);\\n        }\\n\\n        _getActionButton () {\\n            return this.shadowRoot.querySelector('.mc-calltoaction-button');\\n        }\\n    }\\n\\n    componentUtils.registerCustomElement('mc-calltoaction', MCCallToAction);\\n})();\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}