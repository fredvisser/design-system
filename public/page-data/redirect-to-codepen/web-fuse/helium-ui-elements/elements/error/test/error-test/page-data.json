{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/error/test/error-test","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import '../error.js';\\n\\nimport { createFixture } from '../../test/test-utils.js';\\nimport { ErrorPage } from './error-page.js';\\n\\ndescribe('Error', () => {\\n    beforeEach(function () {\\n        this.page = new ErrorPage();\\n        this.element = createFixture(\\n            '<mc-error code=\\\"404\\\" message=\\\"Not found\\\" link-text=\\\"Go HOME\\\" link-url=\\\"https://dev.systemlinkcloud.com/\\\"></mc-error>'\\n        );\\n    });\\n\\n    it('should show the error message and code', function () {\\n        let code = this.page.getCode();\\n        let message = this.page.getMessage();\\n\\n        expect(code.textContent).toBe('404');\\n        expect(message.textContent).toBe('Not found');\\n    });\\n\\n    it('should show the link with the correct text and url', function () {\\n        let link = this.page.getLink();\\n\\n        expect(link.textContent).toBe('Go HOME');\\n        expect(link.href).toBe('https://dev.systemlinkcloud.com/');\\n    });\\n\\n    it('should update the message when attribute changed', function () {\\n        this.element.setAttribute('message', 'New Message');\\n\\n        let message = this.page.getMessage();\\n\\n        expect(message.textContent).toBe('New Message');\\n    });\\n\\n    it('should update the code when attribute changed', function () {\\n        this.element.setAttribute('code', '500');\\n\\n        let code = this.page.getCode();\\n\\n        expect(code.textContent).toBe('500');\\n    });\\n\\n    it('should update the link text when attribute changed', function () {\\n        this.element.setAttribute('link-text', 'New Link Text');\\n\\n        let link = this.page.getLink();\\n\\n        expect(link.textContent).toBe('New Link Text');\\n    });\\n\\n    it('should update the link url when attribute changed', function () {\\n        this.element.setAttribute('link-url', '/new-url');\\n\\n        let link = this.page.getLink();\\n\\n        expect(link.href).toContain('/new-url');\\n    });\\n});\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}