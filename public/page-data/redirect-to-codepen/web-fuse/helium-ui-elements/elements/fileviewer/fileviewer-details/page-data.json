{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/fileviewer/fileviewer-details","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import '../list-editor/list-editor.js';\\n\\nimport { componentUtils } from '../common/component-utils.js';\\nimport { dateUtils } from '../common/date-utils.js';\\nimport { html } from '../../library/html-utils.js';\\n\\nimport inputCss from '../common/styles/input.css';\\nimport fileviewerStyle from './fileviewer.css';\\n\\nconst styles = [inputCss, fileviewerStyle];\\n\\n(function () {\\n    class SLFileViewerDetails extends HTMLElement {\\n        set data (data) {\\n            this._data = data;\\n            this._render();\\n        }\\n\\n        set i18n (i18n) {\\n            this._i18n = i18n;\\n            this._render();\\n        }\\n\\n        connectedCallback () {\\n            componentUtils.upgradeProperty(this, 'data');\\n            componentUtils.upgradeProperty(this, 'i18n');\\n            this._render();\\n        }\\n\\n        _render () {\\n            if (!this.shadowRoot && this._i18n) {\\n                this._renderMain();\\n            }\\n            this._renderData();\\n        }\\n\\n        _renderMain () {\\n            this.attachShadow({ mode: 'open' });\\n            componentUtils.addStylesToElement(this.shadowRoot, styles);\\n\\n            let container = document.createElement('div');\\n            container.classList.add('sl-fileviewer-details-main');\\n            this.shadowRoot.appendChild(container);\\n        }\\n\\n        _renderData () {\\n            if (!this._data || !this._i18n) {\\n                return;\\n            }\\n\\n            let file = this._data;\\n\\n            let main = this._getMain();\\n            main.innerHTML = html`\\n                <div>\\n                    <div class=\\\"sl-fileviewer-form-row\\\">\\n                        <label class=\\\"sl-fileviewer-form-label\\\">${this._i18n.name}</label>\\n                        <input class=\\\"sl-fileviewer-form-input mc-input\\\" id=\\\"file-name\\\" value=\\\"${file.name}\\\">\\n                    </div>\\n                    <div class=\\\"sl-fileviewer-form-row\\\">\\n                        <label class=\\\"sl-fileviewer-form-label\\\">${this._i18n.extension}</label>\\n                        <span id=\\\"file-extension\\\">${file.extension}</span>\\n                    </div>\\n                    <div class=\\\"sl-fileviewer-form-row\\\">\\n                        <label class=\\\"sl-fileviewer-form-label\\\">${this._i18n.created}</label>\\n                        <span id=\\\"file-created\\\">${dateUtils.format(file.created, this._i18n.locale)}</span>\\n                    </div>\\n                    <div class=\\\"sl-fileviewer-form-row\\\">\\n                        <label class=\\\"sl-fileviewer-form-label\\\">${this._i18n.size}</label>\\n                        <span id=\\\"file-size\\\">${file.formattedSize}</span>\\n                    </div>\\n                    <div class=\\\"sl-fileviewer-form-row\\\">\\n                        <label class=\\\"sl-fileviewer-form-label\\\">${this._i18n.properties}</label>\\n                        <sl-list-editor id=\\\"file-properties\\\" type=\\\"KeyValue\\\" key-placeholder=\\\"${this._i18n.propertiesKey}\\\" value-placeholder=\\\"${this._i18n.propertiesValue}\\\"></sl-list-editor>\\n                    </div>\\n                </div>\\n            `;\\n            this._attachEventHandlers(file);\\n        }\\n\\n        _attachEventHandlers (file) {\\n            let nameInput = this._getNameInput();\\n            nameInput.addEventListener('change', () => {\\n                file.name = nameInput.value;\\n                this._fireFileUpdateEvent(file);\\n            });\\n\\n            let propertiesEditor = this._getPropertiesEditor();\\n            propertiesEditor.data = this._objectToKeyValueList(this._filterKnownProperties(file.properties));\\n            propertiesEditor.addEventListener('list-change', (e) => {\\n                file.properties = this._keyValueListToObject(e.detail.data);\\n                file.properties['Name'] = nameInput.value;\\n                this._fireFileUpdateEvent(file);\\n            });\\n        }\\n\\n        _filterKnownProperties (properties) {\\n            let filteredProperties = {};\\n            for (let property in properties) {\\n                if (properties.hasOwnProperty(property) && property !== 'Name') {\\n                    filteredProperties[property] = properties[property];\\n                }\\n            }\\n            return filteredProperties;\\n        }\\n\\n        _objectToKeyValueList (obj) {\\n            obj = obj || {};\\n            return Object.keys(obj).map(function (key) {\\n                return { key: key, value: obj[key] };\\n            });\\n        }\\n\\n        _keyValueListToObject (list) {\\n            let result = {};\\n            for (let item of list) {\\n                result[item.key] = item.value;\\n            }\\n            return result;\\n        }\\n\\n        _fireFileUpdateEvent (file) {\\n            let eventData = {\\n                file: file\\n            };\\n            this.dispatchEvent(new CustomEvent('file-update', { detail: eventData }));\\n        }\\n\\n        _getMain () {\\n            return this.shadowRoot.querySelector('.sl-fileviewer-details-main');\\n        }\\n\\n        _getPropertiesEditor () {\\n            return this.shadowRoot.querySelector('#file-properties');\\n        }\\n\\n        _getNameInput () {\\n            return this.shadowRoot.querySelector('#file-name');\\n        }\\n    }\\n    componentUtils.registerCustomElement('sl-fileviewer-details', SLFileViewerDetails);\\n})();\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}