{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/fileviewer/test/fileviewer-page","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import { GridPage } from '../../grid/test/grid-page.js';\\nimport { ToolbarPage } from '../../toolbar/test/toolbar-page.js';\\nimport { DialogPage } from '../../dialog/test/dialog-page.js';\\nimport { FilterBuilderPage } from '../../filter-builder/test/filter-builder-page.js';\\nimport { UploadPage } from '../../upload/test/upload-page.js';\\nimport { FileViewerDetailsPage } from './fileviewer-details-page.js';\\n\\nexport class FileViewerPage {\\n    getRoot () {\\n        return document.querySelector('sl-fileviewer').shadowRoot;\\n    }\\n\\n    getDetailsPage () {\\n        return new FileViewerDetailsPage(this.getRoot().querySelector('sl-fileviewer-details'));\\n    }\\n\\n    getUploadPage () {\\n        return new UploadPage(this.getRoot().querySelector('mc-upload'));\\n    }\\n\\n    getGridPage () {\\n        return new GridPage(this.getRoot().querySelector('sl-grid'));\\n    }\\n\\n    getFilterBuilderPage () {\\n        return new FilterBuilderPage(this.getRoot().querySelector('sl-filter-builder'));\\n    }\\n\\n    getActionToolbarPage () {\\n        return new ToolbarPage(this.getRoot().querySelector('.sl-fileviewer-action'));\\n    }\\n\\n    getFilterToolbarPage () {\\n        return new ToolbarPage(this.getRoot().querySelector('.sl-fileviewer-filter'));\\n    }\\n\\n    getDialogPage () {\\n        return new DialogPage(this.getRoot().querySelector('mc-dialog'));\\n    }\\n\\n    getMain () {\\n        return this.getRoot().querySelector('.sl-fileviewer-main');\\n    }\\n\\n    getRows () {\\n        return this.getGridPage().getRows();\\n    }\\n\\n    getRow (rowIndex) {\\n        return this.getRows()[rowIndex];\\n    }\\n\\n    getCells (rowIndex) {\\n        let row = this.getRow(rowIndex);\\n        return row.querySelectorAll('.sl-grid-cell');\\n    }\\n\\n    getCell (rowIndex, columnIndex) {\\n        let cells = this.getCells(rowIndex);\\n        return cells[columnIndex];\\n    }\\n\\n    clickCheckbox (rowIndex) {\\n        let cell = this.getCell(rowIndex, 0);\\n        let checkbox = cell.querySelector('input');\\n        checkbox.click();\\n    }\\n\\n    clickEdit (rowIndex) {\\n        let cell = this.getCell(rowIndex, 1);\\n        cell.click();\\n    }\\n\\n    clickUpload () {\\n        this.getActionToolbarPage().getToolbarItems()[0].click();\\n    }\\n\\n    clickDeleteFile () {\\n        let item = this.getActionToolbarPage().getToolbarItems()[3];\\n        let clickEvent = new CustomEvent('click');\\n        item.dispatchEvent(clickEvent);\\n    }\\n\\n    startUpload (content, fileName) {\\n        this.getUploadPage().startUpload(content, fileName);\\n    }\\n\\n    getUploadText () {\\n        return this.getUploadPage().getFormText();\\n    }\\n\\n    clickUpdateButton () {\\n        this.getDialogPage().getLeftButton().click();\\n    }\\n\\n    clickDialogOKButton () {\\n        this.getDialogPage().getMiddleButton().click();\\n    }\\n\\n    getDialogHeader () {\\n        return this.getDialogPage().getHeader();\\n    }\\n\\n    clickFilter () {\\n        this.getFilterToolbarPage().getToolbarItems()[0].click();\\n    }\\n\\n    getFilterBuilderFieldSelector (index) {\\n        return this.getFilterBuilderPage().getFieldSelector(index);\\n    }\\n\\n    getFilterBuilderValueInput (index) {\\n        return this.getFilterBuilderPage().getValueInput(index);\\n    }\\n\\n    getSearchInput () {\\n        return this.getRoot().querySelector('.sl-fileviewer-search-input');\\n    }\\n}\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}