{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/grid/stories/grid-stories","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import { document, console } from 'global';\\nimport { storiesOf } from '@storybook/html';\\nimport { withKnobs, text, boolean } from '@storybook/addon-knobs';\\nimport { action } from '@storybook/addon-actions';\\nimport { addReadme } from 'storybook-readme/html';\\nimport '../../../../dist/js/elements/slgrid.js';\\nimport '../../../../dist/styles/root.css';\\nimport readme from '../README.md';\\n\\nlet generateItems = function (count) {\\n    let result = [];\\n    for (let i = 1; i <= count; i++) {\\n        result.push({\\n            id: i,\\n            name: 'webapp ' + i,\\n            nameUrl: 'https://www.systemlinkcloud.com/' + i,\\n            sharing: 'public',\\n            dateCreated: new Date(2019, 2, 3, 14, 1, 1, 123),\\n            update: 'UPDATE'\\n        });\\n    }\\n    return result;\\n};\\n\\nlet loadItems = function (totalCount, page, pageSize, sortBy, sortOrder) {\\n    let allItems = generateItems(totalCount);\\n    if (sortBy === 'name' && sortOrder === 'desc') {\\n        allItems.reverse();\\n    }\\n\\n    let startIndex = (page - 1) * pageSize;\\n    let endIndex = page * pageSize;\\n    return allItems.slice(startIndex, endIndex);\\n};\\n\\nstoriesOf('Grid', module)\\n    .addDecorator(withKnobs)\\n    .addDecorator(addReadme)\\n    .addParameters({ readme: { sidebar: readme } })\\n    .add('Grid', () => `\\n    <sl-grid page-size=\\\"5\\\" locale=\\\"en-US\\\" go-to-page-label=\\\"Go to page: \\\" page-size-label=\\\"Show rows: \\\" current-page-label=\\\"{from}-{to} of {total}\\\">\\n        <sl-grid-column type=\\\"checkbox\\\" name=\\\"selection\\\" width=\\\"35px\\\"></sl-grid-column>\\n        <sl-grid-column type=\\\"icon-menu\\\" name=\\\"edit\\\" width=\\\"30px\\\" icon=\\\"&#xf013;\\\">\\n        <sl-grid-column-item name=\\\"rename\\\" title=\\\"Rename\\\"></sl-grid-column-item>\\n        <sl-grid-column-item name=\\\"delete\\\" title=\\\"Delete\\\"></sl-grid-column-item>\\n        <sl-grid-column-item name=\\\"modify-policy\\\" title=\\\"Modify security policy\\\"></sl-grid-column-item>\\n        </sl-grid-column>\\n        <sl-grid-column type=\\\"icon\\\" name=\\\"share\\\" width=\\\"30px\\\" icon=\\\"&#xf1e0;\\\"></sl-grid-column>\\n        <sl-grid-column type=\\\"url\\\" name=\\\"name\\\" title=\\\"Name\\\" field=\\\"name\\\"></sl-grid-column>\\n        <sl-grid-column type=\\\"text\\\" optional=\\\"true\\\" name=\\\"sharing\\\" title=\\\"Sharing\\\" field=\\\"sharing\\\" width=\\\"100px\\\" show-on-mobile=\\\"false\\\"></sl-grid-column>\\n        <sl-grid-column type=\\\"date\\\" optional=\\\"true\\\" show=\\\"false\\\" name=\\\"dateCreated\\\" title=\\\"Date added\\\" field=\\\"dateCreated\\\" width=\\\"200px\\\" show-on-mobile=\\\"false\\\"></sl-grid-column>\\n        <sl-grid-column type=\\\"button\\\" name=\\\"update\\\" title=\\\"\\\" field=\\\"update\\\" width=\\\"100px\\\" show-on-mobile=\\\"false\\\"></sl-grid-column>\\n    </sl-grid>`)\\n    .add('Grid with data', () => {\\n        const el = document.createElement('sl-grid');\\n        // el.column = ;\\n        return el;\\n    });\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}