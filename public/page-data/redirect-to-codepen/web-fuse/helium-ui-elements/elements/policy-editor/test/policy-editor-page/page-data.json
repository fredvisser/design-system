{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/policy-editor/test/policy-editor-page","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"export class PolicyEditorPage {\\n    getRoot () {\\n        return document.querySelector('mc-policy-editor').shadowRoot;\\n    }\\n\\n    getTitle () {\\n        return this.getRoot().querySelector('#policytitle');\\n    }\\n\\n    getPolicyNameInput () {\\n        return this.getRoot().querySelector('#policyNameInput');\\n    }\\n\\n    getTagPathFilterInput () {\\n        return this.getRoot().querySelector('#tagWildCardInput');\\n    }\\n\\n    getMessageTopicFilterInput () {\\n        return this.getRoot().querySelector('#topicWildCardInput');\\n    }\\n\\n    getMessageSection () {\\n        return this.getRoot().querySelector('#mpsstatementtitle');\\n    }\\n\\n    getTagSection () {\\n        return this.getRoot().querySelector('#statementtitle');\\n    }\\n\\n    setEditBoxValue (editBox, newValue) {\\n        editBox.value = newValue;\\n        let inputEvent = new CustomEvent('input');\\n        editBox.dispatchEvent(inputEvent);\\n    }\\n\\n    getReadTagCheckBox () {\\n        return this.getRoot().querySelector('#readCheck');\\n    }\\n\\n    getWriteTagCheckBox () {\\n        return this.getRoot().querySelector('#writeCheck');\\n    }\\n\\n    getModifyTagCheckBox () {\\n        return this.getRoot().querySelector('#modifyCheck');\\n    }\\n\\n    getDeleteTagCheckBox () {\\n        return this.getRoot().querySelector('#deleteCheck');\\n    }\\n\\n    getCreateTagCheckBox () {\\n        return this.getRoot().querySelector('#createCheck');\\n    }\\n\\n    getSubscribeToTopicCheckBox () {\\n        return this.getRoot().querySelector('#subscribeCheck');\\n    }\\n\\n    getPublishToTopicCheckBox () {\\n        return this.getRoot().querySelector('#publishCheck');\\n    }\\n\\n    clickCheckBox (checkBox) {\\n        checkBox.checked = !checkBox.checked;\\n        let changeEvent = new CustomEvent('change');\\n        checkBox.dispatchEvent(changeEvent);\\n    }\\n\\n    getUpdateButton () {\\n        return this.getRoot().querySelector('#update');\\n    }\\n\\n    getCancelButton () {\\n        return this.getRoot().querySelector('#cancel');\\n    }\\n\\n    getDeleteButton () {\\n        return this.getRoot().querySelector('#delete');\\n    }\\n\\n    clickButton (button) {\\n        let changeEvent = new CustomEvent('click');\\n        button.dispatchEvent(changeEvent);\\n    }\\n\\n    getNotificationContainer () {\\n        return this.getRoot().querySelector('#policy-validation-notification-container');\\n    }\\n}\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}