{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/sharing/test/sharing-page","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"export class SharingPage {\\n    getRoot () {\\n        return document.querySelector('mc-sharing').shadowRoot;\\n    }\\n\\n    getSharing () {\\n        return this.getRoot().querySelector('.mc-sharing-main');\\n    }\\n\\n    getTitle () {\\n        return this.getRoot().querySelector('#mc-sharing-title').innerText;\\n    }\\n\\n    getEmailInput () {\\n        return this.getRoot().querySelector('#mc-sharing-email-input');\\n    }\\n\\n    getSelectedEmailsContainer () {\\n        return this.getRoot().querySelector('#mc-sharing-selected-emails');\\n    }\\n\\n    getSelectedEmails () {\\n        return this.getRoot().querySelectorAll('.mc-sharing-selected-email');\\n    }\\n\\n    getSelectedEmailInitial (chip) {\\n        return chip.querySelector('.mc-sharing-selected-email-chip');\\n    }\\n\\n    getSelectedEmailText (chip) {\\n        return chip.querySelector('.mc-sharing-selected-email-text');\\n    }\\n\\n    getSelectedEmailCloseButton (chip) {\\n        return chip.querySelector('.mc-sharing-selected-email-remove');\\n    }\\n\\n    clickRemoveChipButton (chip) {\\n        let button = this.getSelectedEmailCloseButton(chip);\\n        let clickEvent = new CustomEvent('click');\\n        button.dispatchEvent(clickEvent);\\n    }\\n\\n    clickAddMessageButton () {\\n        let button = this.getUserMessageButton();\\n        let clickEvent = new CustomEvent('click');\\n        button.dispatchEvent(clickEvent);\\n    }\\n\\n    clickReviewPolicyButton () {\\n        let button = this.getShowPolicyButton();\\n        let clickEvent = new CustomEvent('click');\\n        button.dispatchEvent(clickEvent);\\n    }\\n\\n    getUserMessageButton () {\\n        return this.getRoot().querySelector('#mc-sharing-message-button');\\n    }\\n\\n    getShowPolicyButton () {\\n        return this.getRoot().querySelector('#mc-sharing-review-policy');\\n    }\\n\\n    getUserMessage () {\\n        return this.getRoot().querySelector('#mc-sharing-text-message');\\n    }\\n\\n    setMessage (newValue) {\\n        let editBox = this.getUserMessage();\\n        editBox.value = newValue;\\n        let inputEvent = new CustomEvent('input');\\n        let changed = new CustomEvent('change');\\n        editBox.dispatchEvent(inputEvent);\\n        editBox.dispatchEvent(changed);\\n    }\\n}\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}