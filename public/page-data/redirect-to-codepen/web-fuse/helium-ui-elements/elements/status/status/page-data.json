{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/status/status","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import statusCss from './status.css';\\nimport { componentUtils } from '../common/component-utils.js';\\nimport { html } from '../../library/html-utils.js';\\n\\nconst styles = [statusCss];\\n\\n(function () {\\n    class MCStatus extends HTMLElement {\\n        _render () {\\n            const template = document.createElement('template');\\n            template.innerHTML =\\n                html`<div id='status-content' class='mc-status-content'>\\n                    <div id='status-icon' class=\\\"${this._getStateClass(this.state)}\\\"></div>\\n                    <div class=\\\"mc-status-title\\\"><h3 class=\\\"${this.title === '' ? 'mc-status-hidden' : ''}\\\" id='status-title'>${this.title}</h3></div>\\n                    <div class=\\\"mc-status-message ${this.message === '' ? 'mc-status-hidden' : ''}\\\" id=\\\"status-message\\\">${this.message}</div>\\n                    <div class=\\\"mc-status-additional-message ${this.additionalMessage ? 'mc-status-hidden' : ''}\\\" id=\\\"status-additional-message\\\">${this.additionalMessage}</div>\\n                </div>`;\\n            this.attachShadow({ mode: 'open' });\\n\\n            componentUtils.addStylesToElement(this.shadowRoot, styles);\\n\\n            this.shadowRoot.appendChild(template.content.cloneNode(true));\\n        }\\n\\n        connectedCallback () {\\n            if (!this.shadowRoot) {\\n                this._render();\\n            }\\n        }\\n\\n        static get observedAttributes () {\\n            return ['state', 'title', 'message', 'additional-message'];\\n        }\\n\\n        attributeChangedCallback (name, oldValue, newValue) {\\n            if (!this.shadowRoot) {\\n                return;\\n            }\\n            switch (name) {\\n            case 'message': {\\n                if (newValue && newValue !== '') {\\n                    this._statusMessage.classList.remove('mc-status-hidden');\\n                } else {\\n                    this._statusMessage.classList.add('mc-status-hidden');\\n                }\\n                this._statusMessage = newValue;\\n                break;\\n            }\\n\\n            case 'additional-message': {\\n                if (newValue && newValue !== '') {\\n                    this._statusAdditionalMessage.classList.remove('mc-status-hidden');\\n                } else {\\n                    this._statusAdditionalMessage.classList.add('mc-status-hidden');\\n                }\\n                this._statusAdditionalMessage = newValue;\\n                break;\\n            }\\n\\n            case 'title': {\\n                if (newValue && newValue !== '') {\\n                    this._statusTitle.classList.remove('mc-status-hidden');\\n                } else {\\n                    this._statusTitle.classList.add('mc-status-hidden');\\n                }\\n                this._statusTitle = newValue;\\n                break;\\n            }\\n            case 'state': {\\n                this._setState(newValue);\\n                break;\\n            }\\n            }\\n        }\\n\\n        _setState (state) {\\n            let iconClassList = this._icon.classList;\\n            while (iconClassList.length > 0) {\\n                iconClassList.remove(iconClassList.item(0));\\n            }\\n\\n            let stateClass = this._getStateClass(state);\\n            iconClassList.add(stateClass);\\n        }\\n\\n        _getStateClass (state) {\\n            switch (state) {\\n            case 'pending': {\\n                return 'mc-status-waiting-icon';\\n            }\\n            case 'success': {\\n                return 'mc-status-success-icon';\\n            }\\n            case 'failed': {\\n                return 'mc-status-failed-icon';\\n            }\\n            }\\n        }\\n\\n        get _icon () {\\n            return this.shadowRoot.getElementById('status-icon');\\n        }\\n\\n        get _content () {\\n            return this.shadowRoot.getElementById('status-content');\\n        }\\n\\n        get _statusMessage () {\\n            return this.shadowRoot.getElementById('status-message');\\n        }\\n\\n        set _statusMessage (value) {\\n            this.shadowRoot.getElementById('status-message').innerText = value;\\n        }\\n\\n        get _statusAdditionalMessage () {\\n            return this.shadowRoot.getElementById('status-additional-message');\\n        }\\n\\n        set _statusAdditionalMessage (value) {\\n            this.shadowRoot.getElementById('status-additional-message').innerText = value;\\n        }\\n\\n        get _statusTitle () {\\n            return this.shadowRoot.getElementById('status-title');\\n        }\\n\\n        set _statusTitle (value) {\\n            this.shadowRoot.getElementById('status-title').innerText = value;\\n        }\\n\\n        // Attributes\\n        get state () {\\n            return this.getAttribute('state') || 'pending';\\n        }\\n\\n        get title () {\\n            return this.getAttribute('title') || '';\\n        }\\n\\n        set title (value) {\\n            this.setAttribute('title', value);\\n        }\\n\\n        get message () {\\n            return this.getAttribute('message') || '';\\n        }\\n\\n        set message (value) {\\n            this.setAttribute('message', value);\\n        }\\n\\n        get additionalMessage () {\\n            return this.getAttribute('additional-message') || '';\\n        }\\n\\n        set additionalMessage (value) {\\n            this.setAttribute('additional-message', value);\\n        }\\n    }\\n\\n    componentUtils.registerCustomElement('mc-status', MCStatus);\\n})();\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}