{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/status/test/status-test","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import '../status.js';\\n\\nimport { createFixture, isVisible } from '../../test/test-utils.js';\\nimport { StatusPage } from './status-page.js';\\n\\ndescribe('Status', () => {\\n    describe('Basic  ', () => {\\n        beforeEach(function () {\\n            this.element = createFixture(\\n                `<mc-status\\n                    message=\\\"Awesome message\\\"\\n                    additional-message=\\\"Awesome additional message\\\"\\n                    title=\\\"Title!\\\"\\n                    state=\\\"pending\\\">\\n                </mc-status>`);\\n            this.page = new StatusPage();\\n        });\\n\\n        it('should show status message', function () {\\n            expect(this.page.getStatusMessage()).toBe('Awesome message');\\n        });\\n\\n        it('should update status message', function () {\\n            this.element.setAttribute('message', 'Even more awesome message');\\n            expect(this.page.getStatusMessage()).toBe('Even more awesome message');\\n        });\\n\\n        it('should show additional status message', function () {\\n            expect(this.page.getStatusAdditionalMessage()).toBe('Awesome additional message');\\n        });\\n\\n        it('should update additional status message', function () {\\n            this.element.setAttribute('additional-message', 'Even more awesome additional message');\\n            expect(this.page.getStatusAdditionalMessage()).toBe('Even more awesome additional message');\\n        });\\n\\n        it('should show title', function () {\\n            expect(this.page.getTitle()).toBe('Title!');\\n        });\\n\\n        it('should update title', function () {\\n            this.element.setAttribute('title', 'New title !!');\\n            expect(this.page.getTitle()).toBe('New title !!');\\n        });\\n\\n        it('pending state should show pending icon ', function () {\\n            expect(this.page.getIcon().classList.value).toBe('mc-status-waiting-icon');\\n        });\\n\\n        it('success state should show success icon ', function () {\\n            this.element.setAttribute('state', 'success');\\n            expect(this.page.getIcon().classList.value).toBe('mc-status-success-icon');\\n        });\\n\\n        it('failed state should show failed icon ', function () {\\n            this.element.setAttribute('state', 'failed');\\n            expect(this.page.getIcon().classList.value).toBe('mc-status-failed-icon');\\n        });\\n    });\\n\\n    describe('with empty attributes ', () => {\\n        beforeEach(function () {\\n            this.element = createFixture(\\n                `<mc-status></mc-status>`);\\n            this.page = new StatusPage();\\n        });\\n\\n        it('should hide status message if null', function () {\\n            expect(isVisible(this.page.getStatusMessageHolder())).toBeFalsy();\\n        });\\n\\n        it('should show status message updated with a mesage', function () {\\n            this.element.setAttribute('message', 'Non empty message');\\n            expect(isVisible(this.page.getStatusMessageHolder())).toBeTruthy();\\n        });\\n\\n        it('should hide status message updated with empty value', function () {\\n            this.element.setAttribute('message', '');\\n            expect(isVisible(this.page.getStatusMessageHolder())).toBeFalsy();\\n        });\\n\\n        it('should hide additional message if null', function () {\\n            expect(isVisible(this.page.getStatusAdditionalMessageHolder())).toBeFalsy();\\n        });\\n\\n        it('should show status aditional message updated with a non mepty mesage', function () {\\n            this.element.setAttribute('additional-message', 'Non empty message');\\n            expect(isVisible(this.page.getStatusAdditionalMessageHolder())).toBeTruthy();\\n        });\\n\\n        it('should hide additional message updated with empty value', function () {\\n            this.element.setAttribute('additional-message', '');\\n            expect(isVisible(this.page.getStatusAdditionalMessageHolder())).toBeFalsy();\\n        });\\n\\n        //\\n        it('should hide title if null', function () {\\n            expect(isVisible(this.page.getTitleHolder())).toBeFalsy();\\n        });\\n\\n        it('should show status aditional message updated with a non mepty mesage', function () {\\n            this.element.setAttribute('title', 'Non empty message');\\n            expect(isVisible(this.page.getTitleHolder())).toBeTruthy();\\n        });\\n\\n        it('should hide title updated with empty value', function () {\\n            this.element.setAttribute('title', '');\\n            expect(isVisible(this.page.getTitleHolder())).toBeFalsy();\\n        });\\n    });\\n});\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}