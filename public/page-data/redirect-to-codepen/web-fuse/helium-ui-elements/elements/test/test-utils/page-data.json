{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/test/test-utils","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import rootCss from '../root/root.css';\\nimport documentCss from '../root/document.css';\\n\\nconst styles = [rootCss, documentCss];\\n\\nfunction prependStyles (element, styles) {\\n    for (let style of styles.reverse()) {\\n        let styleElement = document.createElement('style');\\n        styleElement.type = 'text/css';\\n        styleElement.appendChild(document.createTextNode(style));\\n        element.prepend(styleElement);\\n    }\\n}\\n\\nfunction removeFixture () {\\n    let fixture = document.getElementById('fixture');\\n    if (fixture) {\\n        document.body.removeChild(fixture);\\n    }\\n}\\n\\nexport function createFixture (element, customize) {\\n    removeFixture();\\n    const style = document.createElement('style');\\n    style.type = 'text/css';\\n    style.appendChild(document.createTextNode(rootCss));\\n\\n    const fixture = document.createElement('div');\\n    fixture.id = 'fixture';\\n    fixture.innerHTML = element;\\n    prependStyles(fixture, styles);\\n\\n    let instance = fixture.lastChild;\\n\\n    if (customize) {\\n        customize(instance);\\n    }\\n\\n    document.body.prepend(fixture);\\n\\n    return instance;\\n}\\n\\nexport function isVisible (element) {\\n    return element.offsetWidth > 0 && element.offsetHeight > 0;\\n}\\n\\nexport function pressKey (element, code) {\\n    let keyCode = 0;\\n    switch (code) {\\n    case 'Enter': {\\n        keyCode = 13;\\n        break;\\n    }\\n    case 'Escape': {\\n        keyCode = 27;\\n        break;\\n    }\\n    case 'Up': {\\n        keyCode = 38;\\n        break;\\n    }\\n    case 'Down': {\\n        keyCode = 40;\\n        break;\\n    }\\n    };\\n\\n    let pressEvent = new KeyboardEvent('keydown', {\\n        'bubbles': true,\\n        'cancelable': true,\\n        'keyCode': keyCode,\\n        'code': code,\\n        'key': code\\n    });\\n\\n    element.dispatchEvent(pressEvent);\\n}\\n\\nexport function selectOption (element, value) {\\n    element.value = value;\\n\\n    let changeEvent = new CustomEvent('change');\\n    element.dispatchEvent(changeEvent);\\n}\\n\\nexport function enterValue (element, value) {\\n    element.value = value;\\n\\n    let inputEvent = new CustomEvent('input');\\n    element.dispatchEvent(inputEvent);\\n\\n    let changeEvent = new CustomEvent('change');\\n    element.dispatchEvent(changeEvent);\\n}\\n\\nexport function focus (element) {\\n    let changeEvent = new CustomEvent('focus');\\n    element.dispatchEvent(changeEvent);\\n}\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}