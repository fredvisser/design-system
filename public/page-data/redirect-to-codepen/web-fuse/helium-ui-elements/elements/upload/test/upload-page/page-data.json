{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/elements/upload/test/upload-page","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"export class UploadPage {\\n    constructor (element) {\\n        this._element = element;\\n    }\\n\\n    getRoot () {\\n        return this._element ? this._element.shadowRoot : document.querySelector('mc-upload').shadowRoot;\\n    }\\n\\n    getUpload () {\\n        return this.getRoot().querySelector('.mc-upload-main');\\n    }\\n\\n    getBrowse () {\\n        return this.getRoot().querySelector('.mc-upload-drop-browse');\\n    }\\n\\n    getFormText () {\\n        return this.getRoot().querySelector('.mc-upload-drop-form-text');\\n    }\\n\\n    getErrorMessage () {\\n        return this.getRoot().querySelector('.mc-upload-error-message');\\n    }\\n\\n    getInput () {\\n        return this.getRoot().querySelector('.mc-upload-input');\\n    }\\n\\n    getLinks () {\\n        return this.getRoot().querySelectorAll('.mc-upload-links p');\\n    }\\n\\n    clickLink (i) {\\n        return this.getLinks()[i].querySelector('a').click();\\n    }\\n\\n    getDataTransfer (content, fileName) {\\n        try {\\n            let dataTransfer = new DataTransfer();\\n            dataTransfer.items.add(new File([content], fileName));\\n            return dataTransfer;\\n        } catch (error) {\\n            let dataTransfer = {\\n                'files': [new File([content], fileName)]\\n            };\\n            return dataTransfer;\\n        }\\n    }\\n\\n    startUpload (content, fileName) {\\n        let dataTransfer = this.getDataTransfer(content, fileName);\\n        let input = this.getInput();\\n        spyOnProperty(input, 'files', 'get').and.callFake(() => { return dataTransfer.files; });\\n        input.dispatchEvent(new Event('change'));\\n    }\\n}\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}