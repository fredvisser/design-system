{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/helium-ui-elements/library/core/test/serviceurlsapi-test","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import { ServiceUrlsAPI } from '../ServiceUrlsAPI.js';\\n\\ndescribe('ServiceURLs', () => {\\n    it('should return api-dev.systemlinkcloud.com for localhost', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'http:', host: 'localhost:8000' });\\n\\n        let hostname = serviceUrls.hostname();\\n\\n        expect(hostname).toBe('https://api-dev.systemlinkcloud.com');\\n    });\\n\\n    it('should always return https', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'http:', host: 'hosting-dev.systemlinkcloud.io' });\\n\\n        let hostname = serviceUrls.hostname();\\n\\n        expect(hostname).toBe('https://api-dev.systemlinkcloud.com');\\n    });\\n\\n    it('should return api-dev.systemlinkcloud.com as hostname', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'dev.systemlinkcloud.com' });\\n\\n        let hostname = serviceUrls.hostname();\\n\\n        expect(hostname).toBe('https://api-dev.systemlinkcloud.com');\\n    });\\n\\n    it('should return api-test.systemlinkcloud.com as hostname', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'test.systemlinkcloud.com' });\\n\\n        let hostname = serviceUrls.hostname();\\n\\n        expect(hostname).toBe('https://api-test.systemlinkcloud.com');\\n    });\\n\\n    it('should return api.systemlinkcloud.com as hostname', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'www.systemlinkcloud.com' });\\n\\n        let hostname = serviceUrls.hostname();\\n\\n        expect(hostname).toBe('https://api.systemlinkcloud.com');\\n    });\\n\\n    it('isProduction should return true for www.systemlinkcloud.com', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'www.systemlinkcloud.com' });\\n\\n        let isProduction = serviceUrls.isProduction();\\n\\n        expect(isProduction).toBeTruthy();\\n    });\\n\\n    it('isProduction should return false for dev.systemlinkcloud.com', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'dev.systemlinkcloud.com' });\\n\\n        let isProduction = serviceUrls.isProduction();\\n\\n        expect(isProduction).toBeFalsy();\\n    });\\n\\n    it('isProduction should return false for test.systemlinkcloud.com', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'test.systemlinkcloud.com' });\\n\\n        let isProduction = serviceUrls.isProduction();\\n\\n        expect(isProduction).toBeFalsy();\\n    });\\n\\n    it('getURL should return api-dev.systemlinkcloud.com for localhost', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'http:', host: 'localhost:8000' });\\n\\n        let url = serviceUrls.getURL();\\n\\n        expect(url).toBe('https://api-dev.systemlinkcloud.com');\\n    });\\n\\n    it('getURL should always return https', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'http:', host: 'hosting-dev.systemlinkcloud.io' });\\n\\n        let url = serviceUrls.getURL();\\n\\n        expect(url).toBe('https://api-dev.systemlinkcloud.com');\\n    });\\n\\n    it('getURL should return api-dev.systemlinkcloud.com as hostname', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'dev.systemlinkcloud.com' });\\n\\n        let url = serviceUrls.getURL();\\n\\n        expect(url).toBe('https://api-dev.systemlinkcloud.com');\\n    });\\n\\n    it('getURL should return api-test.systemlinkcloud.com as hostname', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'test.systemlinkcloud.com' });\\n\\n        let url = serviceUrls.getURL();\\n\\n        expect(url).toBe('https://api-test.systemlinkcloud.com');\\n    });\\n\\n    it('getURL should return api.systemlinkcloud.com as hostname', function () {\\n        let serviceUrls = new ServiceUrlsAPI({ protocol: 'https:', host: 'www.systemlinkcloud.com' });\\n\\n        let url = serviceUrls.getURL();\\n\\n        expect(url).toBe('https://api.systemlinkcloud.com');\\n    });\\n});\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}