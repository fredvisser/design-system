{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/accordion/methods/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"window.onload = function () {\\n    const accordion = document.getElementById('accordion'),\\n        collapseBtn = document.getElementById('collapse'),\\n        expandBtn = document.getElementById('expand'),\\n        insertBtn = document.getElementById('insert'),\\n        updateBtn = document.getElementById('update'),\\n        removeBtn = document.getElementById('remove'),\\n        crudIndex = document.getElementById('crudIndex'),\\n        setFocusableCbx = document.getElementById('setFocusable'),\\n        expandCollapseIndex = document.getElementById('expandCollapseIndex'),\\n        baseValue = 0;\\n\\n    //Expand, Collapse\\n    collapseBtn.addEventListener('click', function () {\\n        const position = parseInt(expandCollapseIndex.value) || baseValue;\\n        accordion.collapse(position);\\n    });\\n    expandBtn.addEventListener('click', function () {\\n        const position = parseInt(expandCollapseIndex.value) || baseValue;\\n        accordion.expand(position);\\n    });\\n\\n    //Insert, Update, Remove\\n    insertBtn.addEventListener('click', function () {\\n        const position = parseInt(crudIndex.value) || baseValue;\\n        accordion.insert(position, { \\\"label\\\": \\\"New label\\\", \\\"content\\\": \\\"New content\\\" });\\n    });\\n    updateBtn.addEventListener('click', function () {\\n        const position = parseInt(crudIndex.value) || baseValue;\\n        accordion.update(position, { \\\"label\\\": \\\"Updated Label\\\", \\\"content\\\": \\\"Updated Content\\\" });\\n    });\\n    removeBtn.addEventListener('click', function () {\\n        const position = parseInt(crudIndex.value) || baseValue;\\n        accordion.remove(position);\\n    });\\n\\n    //setFocusable\\n    setFocusableCbx.addEventListener('change', function () {\\n        const focusable = setFocusableCbx.checked;\\n        accordion.setFocusable(focusable);\\n    });\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}