{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/array/custom-elements/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function elementTemplateDropDownList(element, dimensions) {\\n    const customElement = document.createElement('jqx-drop-down-list');\\n\\n    customElement.dataSource = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\\n    customElement.selectionMode = 'one';\\n    customElement.dropDownAppendTo = 'body';\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction changeProperty1(property, value, widgets) {\\n    for (let i = 0; i < widgets.length; i++) {\\n        const currentCustomElement = widgets[i].children[0];\\n\\n        if (property === 'width' || property === 'height') {\\n            currentCustomElement.style[property] = value + 'px';\\n        } else if (property === 'disabled') {\\n            currentCustomElement.disabled = value;\\n        }\\n    }\\n}\\n\\nfunction getElementValue1(element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    return customElement.selectedValues[0];\\n}\\n\\nfunction setElementValue1(value, element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    customElement.selectedValues = [value];\\n}\\n\\nfunction elementTemplateComboBox(element, dimensions) {\\n    const customElement = document.createElement('jqx-combo-box');\\n\\n    customElement.dataSource = ['Bulgaria', 'France', 'UK', 'USA', 'Other country'];\\n    customElement.selectionMode = 'one';\\n    customElement.dropDownAppendTo = 'body';\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplateToggleButton(element, dimensions) {\\n    const customElement = document.createElement('jqx-toggle-button');\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction getElementValue2(element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    return customElement.checked;\\n}\\n\\nfunction setElementValue2(value, element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    if (value.toString() === 'true') {\\n        customElement.checked = true;\\n    }\\n    else {\\n        customElement.checked = false;\\n    }\\n}\\n\\nfunction elementTemplateLed(element, dimensions) {\\n    const customElement = document.createElement('jqx-led');\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplatePowerButton(element, dimensions) {\\n    const customElement = document.createElement('jqx-power-button');\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplateListBox(element, dimensions) {\\n    const customElement = document.createElement('jqx-list-box');\\n\\n    customElement.dataSource = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\\n    customElement.selectionMode = 'one';\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplateProgressBar(element, dimensions) {\\n    const customElement = document.createElement('jqx-progress-bar');\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction getElementValue3(element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    return customElement.value;\\n}\\n\\nfunction setElementValue3(value, element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    customElement.value = parseFloat(value);\\n}\\n\\nfunction elementTemplateCircularProgressBar(element, dimensions) {\\n    const customElement = document.createElement('jqx-circular-progress-bar');\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplateCheckBox(element, dimensions) {\\n    const customElement = document.createElement('jqx-check-box');\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplateGauge(element, dimensions) {\\n    const customElement = document.createElement('jqx-gauge');\\n\\n    customElement.analogDisplayType = 'fill';\\n    customElement.labelsVisibility = 'none';\\n    customElement.scalePosition = 'outside';\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplateTank(element, dimensions) {\\n    const customElement = document.createElement('jqx-tank');\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction elementTemplateSlider(element, dimensions) {\\n    const customElement = document.createElement('jqx-slider');\\n\\n    customElement.labelsVisibility = 'none'\\n    customElement.showTooltip = true;\\n    customElement.rangeSlider = true;\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction getElementValue4(element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    return customElement.values;\\n}\\n\\nfunction setElementValue4(value, element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    if (typeof value === 'string') {\\n        value = JSON.parse(value);\\n    }\\n\\n    customElement.values = value;\\n}\\n\\nfunction elementTemplateDateTimePicker(element, dimensions) {\\n    const customElement = document.createElement('jqx-date-time-picker');\\n\\n    customElement.formatString = 'd';\\n    customElement.calendarButton = true;\\n\\n    customElement.style.width = this.elementWidth + 'px';\\n    customElement.style.height = this.elementHeight + 'px';\\n\\n    element.appendChild(customElement);\\n}\\n\\nfunction getElementValue5(element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    return customElement.value.toDate();\\n}\\n\\nfunction setElementValue5(value, element, dimensions) {\\n    const customElement = element.children[0];\\n\\n    customElement.value = value;\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}