{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/button/material/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"window.onload = function () {\\n    const hoverArea = document.getElementById('hover-area'),\\n        floatingHoverButton = document.getElementById('floating-hover-action'),\\n        floatingClickButton = document.getElementById('floating-click-action'),\\n        toggleButtons = document.getElementsByClassName('exclusive-selection'),\\n        progressBar = document.getElementById('progressBar'),\\n        circularProgressBar = document.getElementById('progressBarCircular'),\\n        multiSplitButtonLight = document.getElementById('multiSplitButtonLight'),\\n        multiSplitButtonDark = document.getElementById('multiSplitButtonDark');\\n\\n    for (let i = 0; i < toggleButtons.length; i++) {\\n        toggleButtons[i].addEventListener('change', function (event) {\\n            if (event.detail.value) {\\n                for (let k = 0; k < toggleButtons.length; k++) {\\n                    if (toggleButtons[k] !== this) {\\n                        toggleButtons[k].checked = false;\\n                    }\\n                }\\n            }\\n        });\\n    }\\n\\n    hoverArea.addEventListener('mouseover', function () {\\n        floatingHoverButton.$.removeClass('jqx-visibility-hidden');\\n    });\\n\\n    hoverArea.addEventListener('mouseout', function (event) {\\n        if (event.relatedTarget.closest('jqx-button')) {\\n            return;\\n        }\\n\\n        floatingHoverButton.$.addClass('jqx-visibility-hidden');\\n    });\\n\\n    floatingClickButton.addEventListener('click', function () {\\n        const subMenuButtons = document.getElementsByClassName('floating-click-sub-action');\\n        let changeIcon = false;\\n\\n        for (let i = 0; i < subMenuButtons.length; i++) {\\n            if (subMenuButtons[i].$.hasClass('jqx-visibility-hidden')) {\\n                subMenuButtons[i].$.removeClass('jqx-visibility-hidden');\\n                changeIcon = true;\\n            }\\n            else {\\n                subMenuButtons[i].$.addClass('jqx-visibility-hidden');\\n            }\\n        }\\n\\n        this.getElementsByClassName('material-icons')[0].innerHTML = changeIcon ? 'close' : 'share';\\n    });\\n\\n    document.getElementById('progressUp').addEventListener('click', function () {\\n        progressBar.value = Math.min(progressBar.max, progressBar.value + 1);\\n        circularProgressBar.value = Math.min(circularProgressBar.max, circularProgressBar.value + 1);\\n    });\\n\\n    document.getElementById('progressDown').addEventListener('click', function () {\\n        progressBar.value = Math.max(progressBar.min, progressBar.value - 1);\\n        circularProgressBar.value = Math.max(circularProgressBar.min, circularProgressBar.value - 1);\\n    });\\n\\n    document.getElementById('incrementButton').addEventListener('click', function () {\\n        const progressBar = document.getElementById('progressBarCircularControl');\\n\\n        progressBar.value = Math.min(progressBar.max, progressBar.value + 1);\\n\\n    });\\n\\n    document.getElementById('decrementButton').addEventListener('click', function () {\\n        const progressBar = document.getElementById('progressBarCircularControl');\\n\\n        progressBar.value = Math.max(progressBar.min, progressBar.value - 1);\\n    });\\n\\n    document.getElementById('decrementButton2').addEventListener('click', function () {\\n        const progressBar = document.getElementById('progressBarCircularControl2');\\n\\n        progressBar.value = Math.min(progressBar.max, progressBar.value + 1);\\n\\n    });\\n\\n    document.getElementById('incrementButton2').addEventListener('click', function () {\\n        const progressBar = document.getElementById('progressBarCircularControl2');\\n\\n        progressBar.value = Math.max(progressBar.min, progressBar.value - 1);\\n    });\\n\\n    document.getElementById('powerButtonAnimation').addEventListener('change', function (event) {\\n        document.getElementById('progressBarAnimated').indeterminate = event.detail.value ? false : true;\\n    });\\n\\n    multiSplitButtonLight.dataSource = [{ \\\"value\\\": \\\"1\\\", \\\"label\\\": \\\"Sony\\\", \\\"button\\\": true }, { \\\"value\\\": \\\"2\\\", \\\"label\\\": \\\"Philips\\\", \\\"button\\\": true }, { \\\"value\\\": \\\"3\\\", \\\"label\\\": \\\"Panasonic\\\" }, { \\\"value\\\": \\\"4\\\", \\\"label\\\": \\\"Sharp\\\" }, { \\\"value\\\": \\\"5\\\", \\\"label\\\": \\\"Samsung\\\" }, { \\\"value\\\": \\\"6\\\", \\\"label\\\": \\\"LG\\\" }, { \\\"value\\\": \\\"7\\\", \\\"label\\\": \\\"JVC\\\" }];\\n    multiSplitButtonDark.dataSource = [{ \\\"value\\\": \\\"1\\\", \\\"label\\\": \\\"Sony\\\", \\\"button\\\": true }, { \\\"value\\\": \\\"2\\\", \\\"label\\\": \\\"Philips\\\", \\\"button\\\": true }, { \\\"value\\\": \\\"3\\\", \\\"label\\\": \\\"Panasonic\\\" }, { \\\"value\\\": \\\"4\\\", \\\"label\\\": \\\"Sharp\\\" }, { \\\"value\\\": \\\"5\\\", \\\"label\\\": \\\"Samsung\\\" }, { \\\"value\\\": \\\"6\\\", \\\"label\\\": \\\"LG\\\" }, { \\\"value\\\": \\\"7\\\", \\\"label\\\": \\\"JVC\\\" }];\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}