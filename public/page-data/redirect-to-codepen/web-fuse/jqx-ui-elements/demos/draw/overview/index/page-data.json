{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/draw/overview/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"window.onload = function () {\\n    const draw = new JQX.Utilities.Draw(document.getElementById('container')),\\n        size = draw.getSize(),\\n        // some sample values\\n        values = [200, 1, 15, 100, 8, 200, 200, 200, 1, 15, 100, 8, 200, 200, 1, 15, 100, 8, 200, 200, 1, 15, 100, 8, 200, 1, 15, 100, 8, 200, 200, 1, 15, 100, 8, 200],\\n        // calaculate the values' range\\n        values_range = {\\n            min: draw.min(values),\\n            max: draw.max(values)\\n        };\\n\\n    let x_prev = NaN,\\n        y_prev = NaN;\\n\\n    for (let i = 0; i < values.length; i++) {\\n        // calculate the horizontal offset\\n        const x = draw.scale(\\n            i,                               // value\\n            { min: 0, max: values.length },  // horizontal range (from 0 to the number of elements)\\n            { min: 0, max: size.width }      // horizontal area size\\n        );\\n\\n        // calculate the vertical offset\\n        const y = draw.scale(\\n            values[i],                                // value\\n            values_range,                             // vertical range (from min to max value)\\n            { min: 0, max: size.height, flip: true }  // vertical area size\\n         );\\n\\n        if (isNaN(x_prev) || isNaN(y_prev)) {\\n            x_prev = x;\\n            y_prev = y;\\n        }\\n\\n        // draw a line from the previous to the current point\\n        draw.line(x_prev, y_prev, x, y, { stroke: 'blue', 'stroke-width': 1 });\\n\\n        x_prev = x;\\n        y_prev = y;\\n    }\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}