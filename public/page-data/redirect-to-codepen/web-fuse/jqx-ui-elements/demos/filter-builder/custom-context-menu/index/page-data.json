{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/filter-builder/custom-context-menu/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"window.onload = function () {\\n    const filterBuilder = document.querySelector('jqx-filter-builder'),\\n        customFilterBuilderMenu = document.getElementById('customFilterBuilderMenu');\\n    let handledItem = null;\\n\\n    filterBuilder.fields = [\\n        { label: 'id', dataField: 'id', dataType: 'number', filterOperations: [\\\"=\\\", \\\"anyof\\\"] },\\n        { label: 'Product', dataField: 'productName', dataType: 'string' },\\n        { label: 'Unit Price', dataField: 'price', dataType: 'string' },\\n        { label: 'Total', dataField: 'total', dataType: 'number' },\\n        { label: 'Active', dataField: 'active', dataType: 'boolean', filterOperations: [\\\"=\\\"] }\\n    ];\\n\\n    filterBuilder.value = [\\n        [\\\"productName\\\", \\\"=\\\", \\\"Projector PlusHD\\\"],\\n        \\\"or\\\",\\n        [\\n            [\\\"productName\\\", \\\"=\\\", \\\"Monitors\\\"],\\n            \\\"and\\\",\\n            [\\\"price\\\", \\\"<\\\", 1300]\\n\\n        ],\\n        [\\n            [\\\"productName\\\", \\\"=\\\", \\\"Televisions\\\"],\\n            \\\"and\\\",\\n            [\\\"price\\\", \\\"<\\\", 4000]\\n        ]\\n    ];\\n\\n    filterBuilder.addEventListener('itemClick', function (event) {\\n        if (handledItem && (handledItem.target !== event.target)) {\\n            customFilterBuilderMenu.close();\\n        }\\n    });\\n\\n    filterBuilder.addEventListener('menuOpen', function (event) {\\n        const details = event.detail,\\n            x = details.targetX,\\n            y = details.targetY + details.target.getBoundingClientRect().height;\\n\\n        handledItem = details;\\n\\n        if (details.targetType === 'buttonAdd') {\\n            filterBuilder.addCondition(details.id);\\n        }\\n        else {\\n            customFilterBuilderMenu.open(x, y);\\n        }\\n    });\\n\\n    customFilterBuilderMenu.addEventListener('itemClick', function (event) {\\n        const details = event.detail,\\n            value = details.value;\\n\\n        switch (value) {\\n            case 'addGroup':\\n                handledItem.type === 'condition' ? filterBuilder.addGroup(handledItem.parentGroupId) : filterBuilder.addGroup(handledItem.id);\\n                break;\\n            case 'addCondition':\\n                handledItem.type === 'condition' ? filterBuilder.addCondition(handledItem.parentGroupId) : filterBuilder.addCondition(handledItem.id);\\n                break;\\n            case 'delete':\\n                handledItem.type === 'condition' ? filterBuilder.removeCondition(handledItem.id) : filterBuilder.deleteGroup(handledItem.id);\\n                break;\\n            case 'and':\\n            case 'notand':\\n            case 'or':\\n            case 'notor':\\n                handledItem.type === 'condition' ? filterBuilder.updateGroup(handledItem.parentGroupId, value) : filterBuilder.updateGroup(handledItem.id, value);\\n                break;\\n            case '=':\\n            case '<>':\\n            case '>':\\n            case '>=':\\n            case '<':\\n            case '<=':\\n            case 'between':\\n            case 'startswith':\\n            case 'endswith':\\n            case 'contains':\\n            case 'notcontains':\\n            case 'isblank':\\n            case 'isnotblank':\\n                if (handledItem.type === 'condition') {\\n                    filterBuilder.updateCondition(handledItem.id, [handledItem.data[0], value, handledItem.data[2]]);\\n                }\\n                break;\\n            case 'id':\\n            case 'productName':\\n            case 'price':\\n            case 'total':\\n            case 'active':\\n                if (handledItem.type === 'condition') {\\n                    filterBuilder.updateCondition(handledItem.id, [value, handledItem.data[1], null]);\\n                }\\n        }\\n    });\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}