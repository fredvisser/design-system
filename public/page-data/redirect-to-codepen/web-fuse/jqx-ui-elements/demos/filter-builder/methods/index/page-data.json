{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/filter-builder/methods/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"window.onload = function () {\\n    const filterBuilder = document.querySelector('jqx-filter-builder'),\\n        addPosition = document.getElementById('addPosition'),\\n        addGroupRule = document.getElementById('addGroupRule'),\\n        addGroupButton = document.getElementById('addGroupButton'),\\n        updateGroupButton = document.getElementById('updateGroupButton'),\\n        removeGroupButton = document.getElementById('removeGroupButton'),\\n        addConditionField = document.getElementById('addConditionField'),\\n        addConditionRule = document.getElementById('addConditionRule'),\\n        addConditionValue = document.getElementById('addConditionValue'),\\n        addConditionButton = document.getElementById('addConditionButton'),\\n        updateConditionButton = document.getElementById('updateConditionButton'),\\n        removeConditionButton = document.getElementById('removeConditionButton'),\\n        valueToString = document.getElementById('valueToString'),\\n        toStringButton = document.getElementById('toStringButton');\\n\\n    filterBuilder.fields = [\\n        { label: 'id', dataField: 'id', dataType: 'number', filterOperations: [\\\"=\\\", \\\">\\\", \\\"<\\\"] },\\n        { label: 'Product', dataField: 'productName', dataType: 'string' },\\n        { label: 'Unit Price', dataField: 'price', dataType: 'string' },\\n        { label: 'Total', dataField: 'total', dataType: 'number' },\\n        { label: 'Active', dataField: 'active', dataType: 'boolean', filterOperations: [\\\"=\\\", \\\">\\\", \\\"<\\\"] }\\n    ];\\n\\n    valueToString.label = 'Value To String';\\n\\n    filterBuilder.value = [\\n        [\\\"productName\\\", \\\"=\\\", \\\"Projector PlusHD\\\"],\\n        \\\"or\\\",\\n        [\\n            [\\\"productName\\\", \\\"=\\\", \\\"Monitors\\\"],\\n            \\\"and\\\",\\n            [\\\"price\\\", \\\"<\\\", 1300]\\n\\n        ],\\n        [\\n            [\\\"productName\\\", \\\"=\\\", \\\"Televisions\\\"],\\n            \\\"and\\\",\\n            [\\\"price\\\", \\\"<\\\", 4000]\\n        ]\\n    ];\\n\\n    addConditionField.dataSource = [\\n        { \\\"label\\\": \\\"id\\\", \\\"value\\\": \\\"id\\\" },\\n        { \\\"label\\\": \\\"Product\\\", \\\"value\\\": \\\"productName\\\" },\\n        { \\\"label\\\": \\\"Unit Price\\\", \\\"value\\\": \\\"price\\\" },\\n        { \\\"label\\\": \\\"Total\\\", \\\"value\\\": \\\"total\\\" },\\n        { \\\"label\\\": \\\"Active\\\", \\\"value\\\": \\\"active\\\" }\\n    ];\\n\\n    addConditionRule.dataSource = [\\n        { \\\"label\\\": \\\"Equals\\\", \\\"value\\\": \\\"=\\\" },\\n        { \\\"label\\\": \\\"Does not equal\\\", \\\"value\\\": \\\"<>\\\" },\\n        { \\\"label\\\": \\\"Greater than\\\", \\\"value\\\": \\\">\\\" },\\n        { \\\"label\\\": \\\"Greater than or equal to\\\", \\\"value\\\": \\\">=\\\" },\\n        { \\\"label\\\": \\\"Less than\\\", \\\"value\\\": \\\"<\\\" },\\n        { \\\"label\\\": \\\"Less than or equal to\\\", \\\"value\\\": \\\"<=\\\" },\\n        { \\\"label\\\": \\\"Between\\\", \\\"value\\\": \\\"between\\\" },\\n        { \\\"label\\\": \\\"Starts with\\\", \\\"value\\\": \\\"startswith\\\" },\\n        { \\\"label\\\": \\\"Ends with\\\", \\\"value\\\": \\\"endswith\\\" },\\n        { \\\"label\\\": \\\"Contains\\\", \\\"value\\\": \\\"contains\\\" },\\n        { \\\"label\\\": \\\"Does not contain\\\", \\\"value\\\": \\\"notcontains\\\" },\\n        { \\\"label\\\": \\\"Is blank\\\", \\\"value\\\": \\\"isblank\\\" },\\n        { \\\"label\\\": \\\"Is not blank\\\", \\\"value\\\": \\\"isnotblank\\\" }\\n    ];\\n\\n    toStringButton.addEventListener('click', function () {\\n        valueToString.innerHTML = filterBuilder.toString();\\n        valueToString.open();\\n    });\\n\\n    addGroupButton.addEventListener('click', function () {\\n        const position = addPosition.value,\\n            rule = addGroupRule.value;\\n\\n        filterBuilder.addGroup(position, rule);\\n    });\\n    updateGroupButton.addEventListener('click', function () {\\n        const position = addPosition.value,\\n            rule = addGroupRule.value;\\n\\n        filterBuilder.updateGroup(position, rule);\\n    });\\n    removeGroupButton.addEventListener('click', function () {\\n        const position = addPosition.value;\\n\\n        filterBuilder.removeGroup(position);\\n    });\\n\\n    addConditionButton.addEventListener('click', function () {\\n        const position = addPosition.value,\\n            conditionSettings = getConditionSettings();\\n\\n        filterBuilder.addCondition(position, conditionSettings);\\n    });\\n    updateConditionButton.addEventListener('click', function () {\\n        const position = addPosition.value,\\n            conditionSettings = getConditionSettings();\\n\\n        filterBuilder.updateCondition(position, conditionSettings);\\n    });\\n    removeConditionButton.addEventListener('click', function () {\\n        const position = addPosition.value;\\n\\n        filterBuilder.removeCondition(position);\\n    });\\n\\n    function getConditionSettings() {\\n        const field = addConditionField.selectedValues[0],\\n            rule = addConditionRule.selectedValues[0],\\n            value = addConditionValue.value;\\n\\n        return [field, rule, value];\\n    }\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}