{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/gauge/custom-needle/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function computeArrowHeadPoints(radius, distance, angle, base, height) {\\n    const sin = Math.sin(angle),\\n        cos = Math.cos(angle),\\n        hPointX = radius + (distance - height) * sin,\\n        hPointY = radius + (distance - height) * cos,\\n        startPointX1 = hPointX + base * cos,\\n        startPointY1 = hPointY - base * sin,\\n        startPointX2 = hPointX - base * cos,\\n        startPointY2 = hPointY + base * sin,\\n        endPointX = radius + distance * sin,\\n        endPointY = radius + distance * cos,\\n\\n        points = 'M ' + startPointX1 + ',' + startPointY1 + ' L ' + startPointX2 + ',' + startPointY2 + ' L ' + endPointX + ',' + endPointY + ' Z';\\n\\n    return points;\\n}\\n\\nfunction computeArrowBodyPoints(radius, angle, width, length) {\\n    const sin = Math.sin(angle),\\n        cos = Math.cos(angle),\\n        endX1 = radius - width * cos + length * sin,\\n        endY1 = radius + width * sin + length * cos,\\n        endX2 = radius + width * cos + length * sin,\\n        endY2 = radius - width * sin + length * cos,\\n        startX1 = radius + width * cos,\\n        startY1 = radius - width * sin,\\n        startX2 = radius - width * cos,\\n        startY2 = radius + width * sin,\\n\\n        points = 'M ' + startX1 + ',' + startY1 + ' L ' + startX2 + ',' + startY2 + ' L ' + endX1 + ',' + endY1 + ' ' + endX2 + ',' + endY2;\\n\\n    return points;\\n}\\n\\nfunction customDrawNeedleFunction(element, renderer, radius, angle, distance) {\\n    const arrowHeadPoints = computeArrowHeadPoints(radius, radius - distance, angle, 10, 20),\\n        arrowBodyPoints = computeArrowBodyPoints(radius, angle, 5, radius - distance - 19),\\n\\n        arrowHead = renderer.path(arrowHeadPoints, { 'class': 'arrow-head' }),\\n        arrowBody = renderer.path(arrowBodyPoints, { 'class': 'arrow-body' });\\n\\n    // return an array of all custom SVG elements\\n    return [arrowHead, arrowBody];\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}