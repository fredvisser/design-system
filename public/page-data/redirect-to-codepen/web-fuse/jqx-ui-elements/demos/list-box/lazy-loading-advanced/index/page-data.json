{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/list-box/lazy-loading-advanced/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"ï»¿window.onload = function () {\\n    const list = document.getElementsByTagName(\\\"jqx-list-box\\\")[0],\\n        // we determine the view size by dividing the height of the element by the height of its items and adding 10 more items so that a scrollbar is shown and the \\\"virtual\\\" scrolling is possible\\n        viewSize = Math.round(list.offsetHeight / list.itemHeight) + 10;\\n    let view = 0;\\n\\n    loadItems(true);\\n\\n    function loadItems(initialCall) {\\n        list.displayLoadingIndicator = true;\\n\\n        // this timeout emulates a server call and data fetching\\n        setTimeout(function () {\\n            const itemsInNextView = [];\\n\\n            if (view === 0) {\\n                for (let i = 0; i < viewSize; i++) {\\n                    itemsInNextView.push(\\\"Item \\\" + (i + view * viewSize));\\n                }\\n            }\\n            else {\\n                for (let i = 0; i < viewSize; i++) {\\n                    itemsInNextView.push(\\\"Item \\\" + (i + Math.round(viewSize / 2) * view));\\n                }\\n            }\\n\\n            list.dataSource = itemsInNextView;\\n\\n            if (!initialCall) {\\n                list.scrollTo(list.scrollHeight / 2);\\n            }\\n\\n            list.displayLoadingIndicator = false;\\n        }, 1000);\\n    }\\n\\n    list.addEventListener(\\\"scrollBottomReached\\\", function () {\\n        view++;\\n        loadItems();\\n    });\\n\\n    list.addEventListener(\\\"scrollTopReached\\\", function () {\\n        if (view === 0) {\\n            return;\\n        }\\n\\n        view--;\\n        loadItems();\\n    });\\n}\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}