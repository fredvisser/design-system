{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/list-box/material/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"window.onload = function () {\\n    function configureListBoxes() {\\n        function configureGestureListBox() {\\n            const gestureListbox = document.getElementById('gestureListBox');\\n\\n            gestureListbox.itemTemplate = 'multiLineTemplate';\\n\\n            const actionButtons = gestureListbox.getElementsByClassName('secondLine');\\n            let button;\\n\\n            for (let i = 0; i < actionButtons.length; i++) {\\n                button = document.createElement('jqx-button');\\n                button.id = 'actionButton';\\n                button.classList.add('material', 'flat');\\n                button.innerHTML = '<i class=\\\"material-icons\\\">&#xE8B8;</i>';\\n                actionButtons[i].appendChild(button);\\n            }\\n\\n            function handleSwipe(event) {\\n                const target = event.originalEvent.target.closest('jqx-list-item'),\\n                    actionButton = document.getElementById('actionButton'),\\n                    type = event.type === 'swipeleft' ? 'left' : 'right';\\n                let isSameItem, reset, oldSwipeType;\\n\\n                if (!target) {\\n                    return;\\n                }\\n\\n                target.$.removeClass('swipe-right-left');\\n\\n                const swipedLeftItems = this.getElementsByClassName('swipe-left'),\\n                    swipedRightItems = this.getElementsByClassName('swipe-right');\\n\\n                if (swipedLeftItems.length === 1) {\\n                    oldSwipeType = 'left';\\n                    isSameItem = swipedLeftItems[0] === target ? true : false;\\n                    reset = isSameItem && type === 'left' ? true : false;\\n                    swipedLeftItems[0].$.removeClass('swipe-left');\\n                }\\n                else if (swipedRightItems.length === 1) {\\n                    oldSwipeType = 'right';\\n                    isSameItem = swipedRightItems[0] === target ? true : false;\\n                    reset = isSameItem && type === 'right' ? true : false;\\n                    swipedRightItems[0].$.removeClass('swipe-right');\\n                }\\n\\n                if (isSameItem && oldSwipeType !== 'left') {\\n                    target.$.addClass('swipe-right-left');\\n                }\\n\\n                if (reset) {\\n                    return;\\n                }\\n\\n                if (type === 'right') {\\n                    target.querySelector('jqx-button').innerHTML = '<i class=\\\"material-icons\\\">&#xE307;</i>';\\n                }\\n                else {\\n\\n                    target.querySelector('jqx-button').innerHTML = '<i class=\\\"material-icons\\\">&#xE2C4;</i>';\\n                }\\n\\n                target.$.addClass('swipe-' + type);\\n\\n            }\\n\\n            gestureListbox.addEventListener('swipeleft', handleSwipe);\\n            gestureListbox.addEventListener('swiperight', handleSwipe);\\n        }\\n\\n        function configureDemoListBoxes() {\\n            const switchWifi = document.createElement('jqx-switch-button'),\\n                switchBluetooth = document.createElement('jqx-switch-button'),\\n                settingsMenu = document.getElementById('settingsMenu'),\\n                phoneBook = document.getElementById('phoneBook'),\\n                twoLineList = document.getElementById('twoLineList'),\\n                twoLineCheckList = document.getElementById('twoLineCheckList'),\\n                deleteButton = document.getElementById('deleteButton'),\\n                people = phoneBook.items, \\n                iconLabels = [\\n                    'network_wifi',\\n                    'bluetooth',\\n                    'data_usage',\\n                    'usb',\\n                    '',\\n                    'settings',\\n                    'settings_phone',\\n                    'notifications',\\n                    'stay_primary_portrait',\\n                    'storage',\\n                    'battery_std',\\n                    'apps',\\n                    'people',\\n                    'gps_fixed',\\n                    'security',\\n                    'account_box',\\n                    'home',\\n                    'keyboard',\\n                    'settings_backup_restore',\\n                    'access_time',\\n                    'accessibility',\\n                    'print',\\n                    'phone_android',\\n                    'help'\\n                ];\\n            let button;\\n\\n            switchWifi.classList.add('material');\\n            switchBluetooth.classList.add('material');\\n\\n            switchWifi.checked = true;\\n\\n            settingsMenu.itemTemplate = 'itemTemplate';\\n\\n            const icons = document.getElementsByClassName('primaryAction');\\n\\n            settingsMenu.getElementsByClassName('secondaryAction')[0].appendChild(switchWifi);\\n            settingsMenu.getElementsByClassName('secondaryAction')[1].appendChild(switchBluetooth);\\n\\n            for (let i = 0; i < icons.length; i++) {\\n                icons[i].children[0].textContent = iconLabels[i];\\n            }\\n\\n            phoneBook.itemTemplate = 'itemTemplate';\\n\\n            for (let i = 0; i < people.length; i++) {\\n                button = document.createElement('jqx-button');\\n                button.classList.add('material', 'flat');\\n                button.innerHTML = '<i class=\\\"material-icons\\\">&#xE0C9;</i>';\\n                people[i].getElementsByClassName('secondaryAction')[0].appendChild(button);\\n            }\\n\\n            twoLineList.itemTemplate = 'multiLineTemplate';\\n\\n            const twoLineListItems = twoLineList.items;\\n            let secondLineContent = [\\n                    'General Manager',\\n                    'Developer',\\n                    'Musician',\\n                    'Architect',\\n                    'Janitor',\\n                    'Waitress',\\n                    'Developer',\\n                    'CEO',\\n                    'Team leader',\\n                    'Technical advisor',\\n                    'Human resources(HR)',\\n                    'Financial advisor',\\n                    'Consultant',\\n                    'Human resources(HR)',\\n                    'Tester',\\n                    'Quality Assurance(QA)',\\n                    'Software Developer',\\n                ];\\n\\n            for (let i = 0; i < twoLineListItems.length; i++) {\\n                twoLineListItems[i].getElementsByClassName('secondLine')[0].textContent = secondLineContent[i];\\n            }\\n\\n            twoLineCheckList.itemTemplate = 'multiLineTemplate';\\n\\n            const twoLineCheckListItems = twoLineCheckList.items;\\n            secondLineContent = [\\n                    '650KB',\\n                    '105MB',\\n                    '497MB',\\n                    '1.2MB',\\n                    '345KB',\\n                    '1.2GB',\\n                    '12MB',\\n                    '2.4MB',\\n                    '7.5GB',\\n                    '1.72GB',\\n                    '450MB',\\n                    '480KB',\\n                    '120KB',\\n                    '12.7MB',\\n                    '784MB',\\n                    '920KB',\\n                    '1.7MB'\\n                ];\\n\\n            for (let i = 0; i < twoLineCheckListItems.length; i++) {\\n                twoLineCheckListItems[i].getElementsByClassName('secondLine')[0].textContent = secondLineContent[i];\\n            }\\n\\n            twoLineCheckList.addEventListener('change', function () {\\n                if (this.selectedIndexes.length > 0) {\\n                    deleteButton.$.removeClass('jqx-visibility-hidden');\\n                }\\n                else {\\n                    deleteButton.$.addClass('jqx-visibility-hidden');\\n                }\\n            });\\n\\n            deleteButton.addEventListener('click', function () {\\n                for (let index = twoLineCheckList.selectedIndexes.length - 1; index > -1; index--) {\\n                    twoLineCheckList.remove(twoLineCheckList.selectedIndexes[index])\\n                }\\n            });\\n        }\\n\\n        function configureThemedListBoxes() {\\n            const switchVibration = document.createElement('jqx-switch-button'),\\n                switchVibrationDark = document.createElement('jqx-switch-button'),\\n                switchRingtone = document.createElement('jqx-switch-button'),\\n                switchRingtoneDark = document.createElement('jqx-switch-button'),\\n                switchNotificationLight = document.createElement('jqx-switch-button'),\\n                switchNotificationLightDark = document.createElement('jqx-switch-button'),\\n                switchNotificationsLockScreen = document.createElement('jqx-switch-button'),\\n                switchNotificationsLockScreenDark = document.createElement('jqx-switch-button'),\\n                ringSlider = document.createElement('jqx-slider'),\\n                ringSliderDark = document.createElement('jqx-slider'),\\n                mediaSlider = document.createElement('jqx-slider'),\\n                mediaSliderDark = document.createElement('jqx-slider'),\\n                alarmSlider = document.createElement('jqx-slider'),\\n                alarmSliderDark = document.createElement('jqx-slider'),\\n                listBoxLight = document.getElementById('listBoxLight'),\\n                listBoxDark = document.getElementById('listBoxDark');\\n\\n            const listBoxLightSecondaryAction = listBoxLight.getElementsByClassName('secondLine'),\\n                listBoxDarkSecondaryAction = listBoxDark.getElementsByClassName('secondLine');\\n\\n            function sliderControl() {\\n                switch (this) {\\n                    case mediaSlider:\\n                    case mediaSliderDark:\\n                        this.previousElementSibling.textContent = this.value === this.min ? 'volume_off' : 'volume_up';\\n                        break;\\n                    case alarmSlider:\\n                    case alarmSliderDark:\\n                        this.previousElementSibling.textContent = this.value === this.min ? 'alarm_off' : 'alarm';\\n                        break;\\n                    case ringSlider:\\n                    case ringSliderDark:\\n                        this.previousElementSibling.textContent = this.value === this.min ? 'notifications_off' : 'notifications';\\n                        break;\\n                }\\n            }\\n\\n            [switchVibration, switchVibrationDark, switchRingtone,\\n            switchRingtoneDark, switchNotificationLight, switchNotificationLightDark,\\n            switchNotificationsLockScreen, switchNotificationsLockScreenDark,\\n            ringSlider, ringSliderDark, mediaSlider, mediaSliderDark, alarmSlider, alarmSliderDark\\n            ].map(function (element) {\\n                element.classList.add('material');\\n            });\\n\\n            [ringSlider, ringSliderDark, mediaSlider, mediaSliderDark, alarmSlider, alarmSliderDark].map(function (element) {\\n                element.scalePosition = 'none';\\n            }\\n            );\\n            mediaSlider.value = mediaSliderDark.value = mediaSlider.max / 2;\\n            ringSlider.value = ringSliderDark.value = ringSlider.max / 1.5;\\n            alarmSlider.value = alarmSliderDark.value = alarmSlider.max;\\n\\n            switchVibration.checked = switchVibrationDark.checked = switchNotificationLight.checked = switchNotificationLightDark.checked = true;\\n\\n            listBoxLight.itemTemplate = listBoxDark.itemTemplate = 'multiLineTemplate';\\n\\n            // Light themed list box\\n            listBoxLightSecondaryAction[2].innerHTML = '<i class=\\\"material-icons\\\">&#xE050;</i>';\\n            listBoxLightSecondaryAction[2].appendChild(mediaSlider);\\n            listBoxLightSecondaryAction[3].innerHTML = '<i class=\\\"material-icons\\\">&#xE855;</i>';\\n            listBoxLightSecondaryAction[3].appendChild(alarmSlider);\\n            listBoxLightSecondaryAction[4].innerHTML = '<i class=\\\"material-icons\\\">&#xE7F4;</i>';\\n            listBoxLightSecondaryAction[4].appendChild(ringSlider);\\n            listBoxLightSecondaryAction[5].parentElement.classList.add('single-line');\\n            listBoxLightSecondaryAction[5].appendChild(switchVibration);\\n            listBoxLightSecondaryAction[8].parentElement.classList.add('single-line');\\n            listBoxLightSecondaryAction[8].appendChild(switchRingtone);\\n            listBoxLightSecondaryAction[11].parentElement.classList.add('single-line');\\n            listBoxLightSecondaryAction[11].appendChild(switchNotificationLight);\\n            listBoxLightSecondaryAction[14].parentElement.classList.add('single-line');\\n            listBoxLightSecondaryAction[14].appendChild(switchNotificationsLockScreen);\\n\\n            //Dark themed list box\\n            listBoxDarkSecondaryAction[2].innerHTML = '<i class=\\\"material-icons\\\">&#xE050;</i>';\\n            listBoxDarkSecondaryAction[2].appendChild(mediaSliderDark);\\n            listBoxDarkSecondaryAction[3].innerHTML = '<i class=\\\"material-icons\\\">&#xE855;</i>';\\n            listBoxDarkSecondaryAction[3].appendChild(alarmSliderDark);\\n            listBoxDarkSecondaryAction[4].innerHTML = '<i class=\\\"material-icons\\\">&#xE7F4;</i>';\\n            listBoxDarkSecondaryAction[4].appendChild(ringSliderDark);\\n            listBoxDarkSecondaryAction[5].parentElement.classList.add('single-line');\\n            listBoxDarkSecondaryAction[5].appendChild(switchVibrationDark);\\n            listBoxDarkSecondaryAction[8].parentElement.classList.add('single-line');\\n            listBoxDarkSecondaryAction[8].appendChild(switchRingtoneDark);\\n            listBoxDarkSecondaryAction[11].parentElement.classList.add('single-line');\\n            listBoxDarkSecondaryAction[11].appendChild(switchNotificationLightDark);\\n            listBoxDarkSecondaryAction[14].parentElement.classList.add('single-line');\\n            listBoxDarkSecondaryAction[14].appendChild(switchNotificationsLockScreenDark);\\n\\n            //Additional text\\n            listBoxLightSecondaryAction[7].textContent = listBoxDarkSecondaryAction[7].textContent = 'Breeze';\\n            listBoxLightSecondaryAction[9].textContent = listBoxDarkSecondaryAction[9].textContent = 'Notification';\\n            listBoxLightSecondaryAction[15].textContent = listBoxDarkSecondaryAction[15].textContent = 'No apps can read notifications';\\n\\n\\n            mediaSlider.addEventListener('change', sliderControl);\\n            mediaSliderDark.addEventListener('change', sliderControl);\\n            alarmSlider.addEventListener('change', sliderControl);\\n            alarmSliderDark.addEventListener('change', sliderControl);\\n            ringSlider.addEventListener('change', sliderControl);\\n            ringSliderDark.addEventListener('change', sliderControl);\\n        }\\n\\n        configureDemoListBoxes();\\n        configureThemedListBoxes();\\n        configureGestureListBox();\\n    }\\n\\n    configureListBoxes();\\n}\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}