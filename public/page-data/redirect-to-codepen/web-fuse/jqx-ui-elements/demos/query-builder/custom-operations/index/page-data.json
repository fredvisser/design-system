{"componentChunkName":"component---node-modules-gatsby-remark-code-repls-default-redirect-template-js","path":"/redirect-to-codepen/web-fuse/jqx-ui-elements/demos/query-builder/custom-operations/index","webpackCompilationHash":"","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"JQX('#queryBuilder', class {\\n    get properties() {\\n        return {\\n            allowDrag: true,\\n            customOperations: [\\n                { label: 'Matches /^\\\\d{7}$/g', name: '/^\\\\d{7}$/g', hideValue: true },\\n                {\\n                    label: 'Is valid',\\n                    name: 'isvalid',\\n                    editorTemplate: function (fieldType, value, fieldData) {\\n                        const editor1 = document.createElement('jqx-radio-button'),\\n                            editor2 = document.createElement('jqx-radio-button'),\\n                            container = document.createElement('div');\\n\\n                        editor1.innerHTML = 'Yes';\\n                        editor2.innerHTML = 'No';\\n                        container.className = 'container';\\n\\n                        if (typeof value !== 'boolean') {\\n                            value = !!parseFloat(value);\\n                        }\\n\\n                        editor1.checked = value;\\n                        editor2.checked = !value;\\n\\n                        container.appendChild(editor1);\\n                        container.appendChild(editor2);\\n\\n                        return container;\\n                    },\\n                    valueTemplate: function (value) {\\n                        return value ? '<em>yes</em>' : '<em>no</em>';\\n                    },\\n                    handleValue: function (editor) {\\n                        const editors = editor.getElementsByTagName('jqx-radio-button');\\n\\n                        return editors[0].checked;\\n                    }\\n                }],\\n            fields: [\\n                { label: 'Id', dataField: 'id', dataType: 'number', filterOperations: ['=', '<', '>', 'isvalid'] },\\n                { label: 'Product', dataField: 'productName', dataType: 'string' },\\n                { label: 'Product code', dataField: 'productCode', dataType: 'string', filterOperations: ['=', '/^\\\\d{7}$/g'] },\\n                { label: 'Unit Price', dataField: 'price', dataType: 'number' },\\n                { label: 'Produced', dataField: 'produced', dataType: 'date', filterOperations: ['<', '>'] },\\n                { label: 'Purchased', dataField: 'purchased', dataType: 'datetime' },\\n                { label: 'Available', dataField: 'available', dataType: 'boolean' }\\n            ],\\n            showIcons: true,\\n            value: [\\n                [\\n                    ['productCode', '/^\\\\d{7}$/g'],\\n                    'or',\\n                    ['id', 'isvalid', true]\\n                ],\\n                'and',\\n                [\\n                    ['available', '=', true],\\n                    'and',\\n                    ['price', '<', 1300],\\n                ],\\n                'or',\\n                [\\n                    ['produced', '>', new Date(2015, 3, 4)],\\n                    'and',\\n                    ['purchased', '>=', new Date(2019, 4, 23, 15, 33)]\\n                ]\\n            ]\\n        }\\n    }\\n});\\n\\nwindow.onload = function () {\\n    const queryBuilder = document.getElementById('queryBuilder'),\\n        filterQueryValue = document.getElementById('filterQueryValue');\\n\\n    filterQueryValue.innerHTML = JSON.stringify(queryBuilder.value, null, '\\\\t');\\n\\n    queryBuilder.addEventListener('change', function () {\\n        filterQueryValue.innerHTML = JSON.stringify(queryBuilder.value, null, '\\\\t');\\n    });\\n};\\n\",\"js_external\":\"\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}